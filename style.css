
/* CSS File - Updated (Version: 2023-10-11) */

/* Root Variables */
:root {
  --spacing-unit: 8px;
  --tooltip-text: #0A0700;
  --service-bg: #FAF6FD;
  --product-bg: #FFF8F5;
  --method-bg: #F7FFFF;
}

body {
  font-family: 'Lato', sans-serif;
  margin: calc(var(--spacing-unit) * 2);
  background: #f4f4f4;
  max-width: 1184px;
  margin-left: auto;
  margin-right: auto;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Hero Section (for page title) */
.hero h1 {
  font-size: 2.4rem;
  margin-bottom: 0.25em;
}

.hero h2 {
  font-size: 1.2rem;
  margin-top: 0;
  margin-bottom: 32px;
}

/* Filter Section Styling */
.filters {
  margin-bottom: 24px;
}

.filters label {
  margin-right: 24px;
  cursor: pointer;
  font-size: 1rem;
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.filters input[type="checkbox"] {
  appearance: none;
  width: 24px;
  height: 24px;
  border-radius: 4px;
  border: 2px solid #ccc;
  position: relative;
  cursor: pointer;
}

.filters input[type="checkbox"]::before {
  content: '';
  position: absolute;
  inset: 0;
  background-color: transparent;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.filters input[type="checkbox"]:checked::before {
  background-color: currentColor;
}

.filters input[value="filterone"] { color: #940ED6; border-color: #940ED6; }
.filters input[value="filtertwo"] { color: #FF5B16; border-color: #FF5B16; }
.filters input[value="filterthree"] { color: #2CFDFE; border-color: #2CFDFE; }

/* Table Layout */
.table {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  gap: 16px;
}

.element {
  position: relative;
  border-radius: 8px;
  padding: 16px;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  cursor: default;
  aspect-ratio: 1 / 1;
  max-width: 128px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

/* Hover Effects for Tiles */
.element:hover {
  transform: translateY(-4px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  z-index: 5;
}

/* Tooltip Styling */
.tooltip-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.abbr {
  font-size: 1.8rem;
  font-weight: bold;
  text-align: left;
}

.label {
  font-size: 0.9rem;
  color: #555;
  text-align: left;
}

.tooltip {
  visibility: hidden;
  opacity: 0;
  transform: translateX(-50%);
  width: 428px;
  height: 280px;
  padding: 24px;
  border-radius: 16px;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 6px 16px rgba(0,0,0,0.2);
  background-color: transparent;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 99;
  transition: opacity 0.3s ease;
  font-size: 0.85rem;
}

.tooltip[data-type="filterone"] { border: 1px solid #940ED6!important;}
.tooltip[data-type="filtertwo"] { border: 1px solid #FF5B16!important;}
.tooltip[data-type="filterthree"] { border: 1px solid #2CFDFE!important;}

.tooltip p {
  margin: 0;
  font-size: 1.6rem;
  color: var(--tooltip-text);
}

.tooltip .read-more {
  text-decoration: underline;
  color: var(--tooltip-text);
  margin-top: 12px;
  font-size: 1.2rem;
}

/* Tooltip Visibility on Hover */
.element:hover .tooltip,
.tooltip:hover {
  visibility: visible;
  opacity: 1;
}

/* Dark Mode Styling */
#toggleMode {
  position: fixed;
  top: 16px;
  right: 16px;
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  z-index: 10000;
}

body.dark-mode {
  background-color: #0A0700;
  color: #f7f7f7;
}

body.dark-mode .element[data-type="filterone"] { background-color: #1E032B; border-color: #940ED6; }
body.dark-mode .element[data-type="filtertwo"] { background-color: #260C00; border-color: #FF5B16; }
body.dark-mode .element[data-type="filterthree"]  { background-color: #092828; border-color: #2CFDFE; }

body.dark-mode .tooltip[data-type="filterone"] { border-color: #940ED6; }
body.dark-mode .tooltip[data-type="filtertwo"] { border-color: #FF5B16; }
body.dark-mode .tooltip[data-type="filterthree"] {border-color: #2CFDFE; }

body.dark-mode .tooltip,
body.dark-mode .tooltip .read-more,
body.dark-mode .tooltip p,
body.dark-mode .label {
  color: #f7f7f7;
  background-color: transparent;
}

body.dark-mode .filters input[type="checkbox"]::before {
  background-color: #1E032B;
}

body.dark-mode .filters input[value="filterone"] { background-color: #940ED6; border: 2px solid #940ED6; }
body.dark-mode .filters input[value="filtertwo"] { background-color: #FF5B16; border: 2px solid #FF5B16; }
body.dark-mode .filters input[value="filterthree"]  { background-color: #2CFDFE; border: 2px solid #2CFDFE; }

body .filters input[type="checkbox"]::before {
  background-color: transparent;
}

body .filters input[value="filterone"]:checked::before {
  background-color: #940ED6;
}

body .filters input[value="filtertwo"]:checked::before {
  background-color: #FF5B16;
}

body .filters input[value="filterthree"]:checked::before {
  background-color: #2CFDFE;
}
  </style>
</head>
<body>
  <h1>Manage Design Elements</h1>

  <form id="designElementForm">
  <!-- Page Selection or Creation -->
  <div class="section-label">Select or Create Page</div>
  <select name="pageSelector" id="pageSelector" required>
    <option value="">Select Page</option>
    <option value="createNewPage">Create New Page</option>
    <!-- Dynamic pages will be added here -->
  </select><br><br>

  <!-- If "Create New Page" is selected, show the title and subtitle fields -->
  <div id="newPageFields" style="display: none;">
    <input name="newPageTitle" placeholder="New Page Title (e.g., UX Design)" required /><br><br>
    <input name="newPageSubtitle" placeholder="New Page Subtitle (optional)" /><br><br>
  </div>

  <input name="pageTitle" placeholder="Page Title (e.g., UX Design)" required />
  <input name="pageSubtitle" placeholder="Page Subtitle (optional)" /><br><br>

  <div class="section-label">Filters (Types)</div>
  <input name="newType" placeholder="Add a new filter (e.g., Research)" />
  <select name="typeSelect" id="typeSelect">
    <option value="">Select existing filter</option>
  </select>

  <div class="section-label">Element Details</div>
  <input name="abbr" placeholder="Abbreviation (e.g., UX)" required />
  <input name="label" placeholder="Label (e.g., User Experience)" required />
  <textarea name="text" rows="3" placeholder="Tooltip text..." required></textarea>
  <input name="link" placeholder="Read more link (optional)" />

  <!-- Select an existing element to edit -->
  <div class="section-label">Select Element to Edit</div>
  <select id="elementSelector" name="elementSelector">
    <option value="">Select an element</option>
    <!-- Elements will be added dynamically -->
  </select><br><br>

  <button type="submit">Save Element</button>
</form>

<div id="loadingMessage" style="display:none;">Submitting your data... Please wait.</div>

<h2>Page Preview</h2>
<div id="pageInfo"></div>
<div id="previewContainer"></div>

<div class="section-label">Existing Elements</div>
<div class="existing-tiles" id="existingTiles"></div>

<script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-firestore.js"></script>
<script src="script.js"></script>

</body>
</html>
